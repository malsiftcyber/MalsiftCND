services:
  app:
    build: .
    ports:
      - "8000:8000"
      - "443:443"
    environment:
      - DATABASE_URL=postgresql://malsift:malsift@db:5432/malsift
      - REDIS_URL=redis://redis:6379/0
      - SECRET_KEY=${SECRET_KEY:-change-this-secret-key-in-production-must-be-at-least-32-characters-long}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY:-change-this-jwt-secret-key-in-production-must-be-at-least-32-characters-long}
      - DEBUG=${DEBUG:-false}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
    depends_on:
      - db
      - redis
    volumes:
      - ./data:/app/data
      - ./certs:/app/certs
      - ./logs:/app/logs
    restart: unless-stopped

  db:
    image: postgres:15
    environment:
      - POSTGRES_DB=malsift
      - POSTGRES_USER=malsift
      - POSTGRES_PASSWORD=malsift
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    volumes:
      - redis_data:/data
    restart: unless-stopped

  worker:
    build: .
    command: celery -A app.celery worker --loglevel=info
    environment:
      - DATABASE_URL=postgresql://malsift:malsift@db:5432/malsift
      - REDIS_URL=redis://redis:6379/0
      - SECRET_KEY=${SECRET_KEY:-change-this-secret-key-in-production-must-be-at-least-32-characters-long}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY:-change-this-jwt-secret-key-in-production-must-be-at-least-32-characters-long}
      - DEBUG=${DEBUG:-false}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
    depends_on:
      - db
      - redis
    volumes:
      - ./data:/app/data
    restart: unless-stopped

  flower:
    build: .
    command: celery -A app.celery flower --port=5555
    ports:
      - "5555:5555"
    environment:
      - DATABASE_URL=postgresql://malsift:malsift@db:5432/malsift
      - REDIS_URL=redis://redis:6379/0
      - SECRET_KEY=${SECRET_KEY:-change-this-secret-key-in-production-must-be-at-least-32-characters-long}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY:-change-this-jwt-secret-key-in-production-must-be-at-least-32-characters-long}
    depends_on:
      - redis
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
